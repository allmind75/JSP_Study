<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace : package처럼 용도별로 구분하기 위한 이름 -->
<mapper namespace="boardFood">
	
	<insert id="insertFood" parameterType="dto.BoardFoodDTO">
		INSERT INTO board_food SET
		title = #{title}, content = #{content}, address = #{address},
		phone = #{phone}, time = #{time}, menu = #{menu}, img = #{img}, map = #{map};		
	</insert>
	
	<update id="updateFood" parameterType="dto.BoardFoodDTO">
		UPDATE board_food
			<set>
				<if test="title != null">title = #{title},</if>
				<if test="content != null">content = #{content},</if>
				<if test="address != null">address = #{address},</if>
				<if test="phone != null">phone = #{phone},</if>
				<if test="time != null">time = #{time},</if>
				<if test="menu != null">menu = #{menu},</if>
				<if test="img != null">img = #{img},</if>
				<if test="map != null">map = #{map}</if>
			</set>
		WHERE fnum = #{fnum};
	</update>
	
	<update id="updateHeart">
		UPDATE board_food SET heart = heart + #{amount} WHERE fnum = #{fnum} 
	</update>
	
	<update id="updateHeartSync">
		UPDATE board_food SET heart = 
		(SELECT COUNT(hnum) FROM heart_food WHERE num = board_food.fnum)
		WHERE fnum > 0;
	</update>
	
	<update id="updateCnt">
		UPDATE board_food SET cnt = cnt + 1 WHERE fnum = #{fnum}
	</update>
	
	<update id="updateReply">
		UPDATE board_food SET reply = #{cnt} WHERE fnum = #{fnum}
	</update>
	
	<delete id="deleteFood">
		DELETE FROM board_food WHERE fnum = #{fnum}
	</delete>
	
	<select id="selectReadFood" resultType="dto.BoardFoodDTO">
		SELECT fnum, title, content, address, phone, time, menu, img, map, heart, reply, cnt FROM board_food
		WHERE fnum = #{fnum};
	</select>
		
	<select id="listSearch" resultType="dto.BoardFoodDTO">
		SELECT fnum, title, regdate, cnt FROM board_food WHERE fnum > 0
		
		<include refid="search"></include>
		
		ORDER BY fnum DESC LIMIT #{pageStart}, #{perPageNum}		
	</select>
	
	<select id="listSearchCount" resultType="int">
		SELECT COUNT(fnum) FROM board_food WHERE fnum > 0
		<include refid="search"></include>
	</select>
	
	<select id="selectRecommend" resultType="dto.BoardFoodDTO">
		SELECT fnum, title, img, heart, reply, cnt FROM board_food ORDER BY heart DESC LIMIT 0, 2;
	</select>
	
	<select id="selectListSearch" resultType="dto.BoardFoodDTO">
		SELECT fnum, title, content, address, heart, reply, cnt, img FROM board_food
		WHERE fnum > 0
		
		<include refid="search"></include>		
		
		ORDER BY fnum DESC LIMIT #{pageStart}, #{perPageNum}
	</select>	
	
	<select id="selectHeartCnt" resultType="int">
		SELECT heart FROM board_food WHERE fnum =#{fnum};
	</select>
	
	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				AND title LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'c'.toString()">
				AND content LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'a'.toString()">
				AND address LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'tc'.toString()">
				AND (title LIKE CONCAT('%', #{keyword}, '%')
				OR content LIKE CONCAT('%', #{keyword}, '%'))
			</if>
			<if test="searchType == 'ca'.toString()">
				AND (content LIKE CONCAT('%', #{keyword}, '%')
				OR address LIKE CONCAT('%', #{keyword}, '%'))			
			</if>
			<if test="searchType == 'tca'.toString()">
				AND (title LIKE CONCAT('%', #{keyword}, '%')
				OR content LIKE CONCAT('%', #{keyword}, '%')
				OR address LIKE CONCAT('%', #{keyword}, '%'))		
			</if>
		</if>
	</sql>
</mapper>

